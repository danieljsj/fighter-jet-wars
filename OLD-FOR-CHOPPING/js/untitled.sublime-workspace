{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"oth",
				"otherPlaneTurnFuncs"
			],
			[
				"for",
				"for	for (…) {…} (Improved Native For-Loop)"
			],
			[
				"pla",
				"planes"
			],
			[
				"resp",
				"respawnTime"
			],
			[
				"poi",
				"pointsTouchingThing"
			],
			[
				"sense",
				"senseEnvironment"
			],
			[
				"las",
				"laserRefreshTime"
			],
			[
				"laser",
				"laserRefreshLeft"
			],
			[
				"cat",
				"categoryNames"
			],
			[
				"proce",
				"processDelay"
			],
			[
				"Bat",
				"BaT_Postie_Followup"
			],
			[
				"process",
				"processLinks"
			],
			[
				"null",
				"nullFunc"
			],
			[
				"base",
				"baseDrag"
			],
			[
				"proto",
				"prototype"
			],
			[
				"dT",
				"dT"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/daniel/jsProjects/fighter-jet-wars/index.html",
			"settings":
			{
				"buffer_size": 1384,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mapBkg.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/daniel/jsProjects/fighter-jet-wars/style.css",
			"settings":
			{
				"buffer_size": 418,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objects/world.js",
			"settings":
			{
				"buffer_size": 718,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objects/entity.js",
			"settings":
			{
				"buffer_size": 1222,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objects/flyer.js",
			"settings":
			{
				"buffer_size": 626,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n//== Entity > Flyer > \n//======================== P L A N E ========================//\n\nfunction Plane() { \n	Flyer.apply(this);  // THIS IS SO YOU GET X AND Y GENERATED NOW AND INDEPENDENTLY.\n\n	// Image\n	this.image = {\n		src:'images/plane-friendly-gray.png',\n		height:32,\n		width:32,\n	}\n\n	// Permanent attributes\n	this.atts = {\n		baseAccel  			: 50, 	// afterburnerAccel in pixels per second^2\n		afterburnerAccel 	: 100, 	// afterburnerAccel in pixels per second^2\n		baseDrag	 		: 0.2, 	// base coefficient of loss of velocity per second\n		brakesDrag 			: 0.4, 	// brakes coefficient of loss of velocity per second\n		turnRate	 		: 1.8, 	// turn rate in radians per second\n		laserRefreshTime	: .5,	// \n		respawnTime			: 2\n	};\n\n	// Starting static stuff (lives, score, etc.)\n	this.stats.lives = 10;\n\n\n	// Inits\n	this.inits.push({\n		handle: 'spawn',\n		order: 200,\n		func: function(){\n			this.spawn();\n		}\n	});\n\n	// Inits\n	this.inits.push({\n		handle: 'register',\n		order: 200,\n		func: function(){\n			registry.planes.push(this);\n		}\n	});\n\n}; 			\n\n\nPlane.prototype = Object.create(Flyer.prototype); 	// THIS IS SO YOU GET FUNCTIONS.\nPlane.prototype.constructor = Plane; 				// WHY DO I NEED THIS? (TRY WITHOUT...)\n\n\nPlane.prototype.accelerate = function(dT){ /// NOTE: You'd need to create a separate bundler for stuff that needs dT...\n	// -- DRAG -- //\n\n	// Base Drag\n	this.p.speed -= this.p.speed * this.atts.baseDrag * dT;\n\n	// Braking Drag\n	if (this.ctrls.braking){\n		this.p.speed -= this.p.speed * this.atts.brakesDrag * dT;\n	}	\n\n\n	// -- THRUST -- //\n\n	// Base Thrust\n	this.p.speed += this.atts.baseAccel * dT;\n\n	// Afterburning Thrust\n	if (this.ctrls.afterburning) {\n		this.p.speed += this.atts.afterburnerAccel * dT;\n	}\n\n\n	// -- TURNING -- //f\n\n	// Turning\n	this.p.direction -= this.ctrls.turning * this.atts.turnRate * dT; // why negative?\n\n	// Reign in the radians\n	if (this.p.direction >   3.141592654*2) {\n		this.p.direction -=  3.141592654*2;\n	}\n	if (this.p.direction <  -3.141592654*2) {\n		this.p.direction -= -3.141592654*2;\n	}\n\n}\n\n\nPlane.prototype.refresh = function(dT){\n	\n	// Laser Refresh\n	if (this.stats.laserRefreshLeft > 0){\n		this.stats.laserRefreshLeft -= dT;\n	} else {\n		this.stats.laserReady = true;\n	}\n\n	// Respawn\n	if (this.stats.respawnTimeLeft > 0){\n		this.stats.respawnTimeLeft -= dT;\n	} else {\n		this.stats.respawnReady = true;\n	}\n\n	if (false === this.stats.active && true === this.stats.respawnReady){\n		this.spawn();\n	}\n\n}\n\n\nPlane.prototype.spawn = function(){\n\n	// set Physical statuses\n	this.p.speed 		= this.atts.baseAccel / this.atts.baseDrag; // pixels per second\n	this.p.x 			= Math.random()*canvas.width;\n	this.p.y 			= Math.random()*canvas.height;\n	this.p.direction 	= Math.atan( \n		( \n			canvas.height / 2  -  this.p.y // THIS NEEDS NOAH MATH HELP\n		)/(\n			canvas.width  / 2  -  this.p.x // THIS NEEDS NOAH MATH HELP\n		)\n	);\n\n	// set Controls statuses\n	this.ctrls.turning 		= 0;\n	this.ctrls.afterburning	= false;\n	this.ctrls.braking 		= false;\n	this.ctrls.tryingToFire = false;\n\n	// Set Various statuses\n	this.stats.laserRefreshLeft = 0;\n\n}\n\n\nPlane.prototype.communicate = function(){ // Eventually, these could be bundled into hooks just like init is bundled.\n\n	// Fire Laser\n	if ( this.ctrls.tryingToFire && this.stats.laserReady ){\n\n		// Laser refresh\n		this.stats.laserReady = false;\n		this.stats.laserRefreshLeft = this.atts.laserRefreshTime;\n\n		// Create laser\n		var newLaser = new Laser(this); \n		console.log( newLaser );\n\n		// Create a laser, record its position in the array\n		registry.lasers.push( newLaser );\n\n		// init\n		newLaser.init();\n	}\n\n}\n\n\nPlane.prototype.respawn = \n\nPlane.prototype.getHit = function(){\n	this.stats.lives -= 1;\n	this.stats.active = false;\n	this.stats.respawnTimeLeft = this.atts.respawnTime;\n\n\n}",
			"file": "objects/plane.js",
			"file_size": 3780,
			"file_write_time": 1390882722000000,
			"settings":
			{
				"buffer_size": 3768,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objects/player.js",
			"settings":
			{
				"buffer_size": 1767,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objects/comp.js",
			"settings":
			{
				"buffer_size": 639,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objects/laser.js",
			"settings":
			{
				"buffer_size": 1046,
				"line_ending": "Unix"
			}
		},
		{
			"file": "controls.js",
			"settings":
			{
				"buffer_size": 212,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\"use strict\";\n\n// Update game objects\nvar update = function (dT) {\n	\n	for (var i = registry.planes.length - 1; i >= 0; i--) {\n		if( registry.planes[i].stats.active){\n\n			registry.planes[i].control();\n			registry.planes[i].move();\n			registry.planes[i].accelerate();\n			registry.planes[i].communicate();\n			registry.planes[i].senseEnvironment();\n\n		}\n\n		registry.planes[i].refresh();\n\n	};\n\n	for (var i=0; i<registry.lasers.length; i++){\n\n		registry.lasers[i].move(dT);\n		registry.lasers[i].senseEnvironment();\n	\n	}\n\n};",
			"file": "update.js",
			"file_size": 527,
			"file_write_time": 1390883110000000,
			"settings":
			{
				"buffer_size": 518,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sensing.js",
			"settings":
			{
				"buffer_size": 3277,
				"line_ending": "Unix"
			}
		},
		{
			"file": "render.js",
			"settings":
			{
				"buffer_size": 1171,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 54.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/daniel/jsProjects/fighter-jet-wars/js/game.js",
		"/home/daniel/jsProjects/fighter-jet-wars/js/objects.js",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-followup/bat-postie-post-filters.php",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-followup/plugin.php",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-followup/original-plugin.php",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-followup/plugin-good-stuff.php",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/postie/filterPostie.php.sample",
		"/home/daniel/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-followup/plugin-new.php",
		"/home/daniel/Desktop/filterPostie.php.sample",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-postprocessing/example-subject-and-links.txt",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-postprocessing/original-plugin.php",
		"/home/daniel/Desktop/bat-postie-followup/bat-postie-followup.php",
		"/home/daniel/Desktop/Link to LiteBaT wp-content/plugins/bat-postie-postprocessing/plugin-new.php",
		"/home/daniel/Desktop/bat-postie-followup/BatPostieFollowup_OptionsManager.php",
		"/home/daniel/Desktop/bat-postie-followup/BatPostieFollowup_LifeCycle.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/plugins/bat-postie-postprocessing/plugin-new.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/plugins/bat-postie-postprocessing/original-plugin.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/plugins/bat-postie-postprocessing/chopping-round-1/chopping-source.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/header.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/plugins/bat-postie-postprocessing/chopping-round-1/stuff-we-like-for-sure.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/plugins/bat-postie-postprocessing/chopping-source.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/css/960.css",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/css/hotfixes.css",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/plugins/PostviaEmail/postviaemail.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/style.css",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/css/text.css",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/css/reset.css",
		"/home/daniel/Desktop/Link to litebat/wp-content/plugins/bat-postie-postprocessing/chopping-source.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/living-journal/footer.php",
		"/home/daniel/Desktop/Link to bring-a-trailer/wp-content/themes/cleanr/footer.php",
		"/home/daniel/Desktop/Link to litebat/wp-content/plugins/bat-postie-postprocessing/plugin.php",
		"/home/daniel/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/daniel/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/daniel/Desktop/Link to litebat/wp-config.php",
		"/home/daniel/Desktop/batdec13.xml",
		"/home/daniel/jsProjects/fighter-jet-wars/js/update.js",
		"/home/daniel/jsProjects/fighter-jet-wars/js/begin.js",
		"/home/daniel/jsProjects/fighter-jet-wars/js/gameLoop.js",
		"/home/daniel/jsProjects/fighter-jet-wars/js/render.js",
		"/home/daniel/Desktop/fighter-jet-wars/testJs/this.html",
		"/home/daniel/Desktop/fighter-jet-wars/js/objects.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"otherPlaneTurnFuncs",
			"respawn",
			"respan",
			"j",
			"again, I'm not sure what the \"this\" is here, but it should be the object in question",
			"laserRefresh",
			"burn",
			"plane",
			"refresh",
			"parseTitle",
			"parse_title",
			"$post",
			"setCategory",
			"processLinks",
			"process_post_title",
			"content",
			"ebayLinks",
			"raw_content",
			"setcategory",
			"name",
			"post",
			"$post",
			"parse_title",
			"filter_title",
			"title",
			"content",
			"$this->",
			"target_url",
			"\"",
			"results",
			"&",
			" 		=>",
			"=>",
			"),",
			"ebaylin",
			"'",
			"spacer",
			"registry",
			"this",
			"afterburning",
			"afterburnerAccel",
			"1",
			"direction",
			"baseDrag"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"refresh",
			"respawn",
			"respawn\n",
			"i",
			"parseTitle",
			"$post_update",
			"title_orig",
			"post_content",
			"title_final",
			"title_orig",
			"$",
			"",
			"'",
			"matches",
			"\"",
			"player1",
			"2",
			"speed"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 11,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/daniel/jsProjects/fighter-jet-wars/index.html",
					"settings":
					{
						"buffer_size": 1384,
						"regions":
						{
						},
						"selection":
						[
							[
								40,
								40
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "mapBkg.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/daniel/jsProjects/fighter-jet-wars/style.css",
					"settings":
					{
						"buffer_size": 418,
						"regions":
						{
						},
						"selection":
						[
							[
								301,
								301
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "objects/world.js",
					"settings":
					{
						"buffer_size": 718,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "objects/entity.js",
					"settings":
					{
						"buffer_size": 1222,
						"regions":
						{
						},
						"selection":
						[
							[
								607,
								607
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 322.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "objects/flyer.js",
					"settings":
					{
						"buffer_size": 626,
						"regions":
						{
						},
						"selection":
						[
							[
								624,
								624
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "objects/plane.js",
					"settings":
					{
						"buffer_size": 3768,
						"regions":
						{
						},
						"selection":
						[
							[
								902,
								902
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "objects/player.js",
					"settings":
					{
						"buffer_size": 1767,
						"regions":
						{
						},
						"selection":
						[
							[
								1767,
								1767
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "objects/comp.js",
					"settings":
					{
						"buffer_size": 639,
						"regions":
						{
						},
						"selection":
						[
							[
								639,
								639
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "objects/laser.js",
					"settings":
					{
						"buffer_size": 1046,
						"regions":
						{
						},
						"selection":
						[
							[
								865,
								865
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "controls.js",
					"settings":
					{
						"buffer_size": 212,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "update.js",
					"settings":
					{
						"buffer_size": 518,
						"regions":
						{
						},
						"selection":
						[
							[
								342,
								342
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "sensing.js",
					"settings":
					{
						"buffer_size": 3277,
						"regions":
						{
						},
						"selection":
						[
							[
								2240,
								2240
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1479.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "render.js",
					"settings":
					{
						"buffer_size": 1171,
						"regions":
						{
						},
						"selection":
						[
							[
								101,
								101
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
